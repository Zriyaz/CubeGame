version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: socket-game-postgres
    environment:
      POSTGRES_DB: socket_game
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: socket-game-redis
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./packages/backend
      dockerfile: ../../docker/Dockerfile.backend
    container_name: socket-game-backend
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/socket_game
      REDIS_URL: redis://:redis123@redis:6379
      JWT_SECRET: your-jwt-secret-key
      GOOGLE_CLIENT_ID: your-google-client-id
      GOOGLE_CLIENT_SECRET: your-google-client-secret
      FRONTEND_URL: http://localhost:5173
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    command: npm run dev

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: ../../docker/Dockerfile.frontend.dev
    container_name: socket-game-frontend
    ports:
      - '5173:5173'
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_WS_URL: ws://localhost:3000
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data: